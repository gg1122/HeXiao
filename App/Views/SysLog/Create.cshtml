@{
    Layout = "~/Views/Shared/Create.cshtml";
}

@model Langben.DAL.SysLog

@using Common
@using Models
<div class="portlet-title">
    <div class="caption">
        <i class="icon-equalizer font-red-sunglo"></i>
        <span class="caption-subject font-red-sunglo bold uppercase">日志</span>
        <span class="caption-helper">一定要加油哦，我是来说明的。</span>
    </div>
</div>
<div class="portlet-body form">
    <!-- BEGIN FORM-->
    <script type="text/javascript">
var windowObjectReference = null; // global variable

function openFFPromotionPopup() {
  if(windowObjectReference == null || windowObjectReference.closed)
  /* if the pointer to the window object in memory does not exist
     or if such pointer exists but the window was closed */

  {
    windowObjectReference = window.open("http://www.spreadfirefox.com/",
   "PromoteFirefoxWindowName", "resizable,scrollbars,status");
    /* then create it. The new window will be created and
       will be brought on top of any other window. */
  }
  else
  {
    windowObjectReference.focus();
    /* else the window reference must exist and the window
       is not closed; therefore, we can bring it back on top of any other
       window with the focus() method. There would be no need to re-create
       the window or to reload the referenced resource. */
  };
}
    </script>
     
    (...)

    <p>
        <a href="http://www.spreadfirefox.com/"
           target="PromoteFirefoxWindowName"
           onclick="openFFPromotionPopup(); return false;"
           title="This link will create a new window or will re-use an already opened one">Promote Firefox adoption</a>
    </p>

    <form action="/SysLog/Create" class="form-horizontal">
        <div class="form-body">
             
            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        <a  onclick="showModalOnly('SysDepartmentId','../../SysDepartment');">
                            @Html.LabelFor(model => model.Result, new { @class = "control-label col-md-4" })
                        </a>
                        <div class="col-md-8">
                            
                            <span class="help-block">

                            </span>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Result, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.Result, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Result) })
                            @Html.ValidationMessageFor(model => model.Result)
                            <span class="help-block">

                            </span>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MenuId, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.MenuId, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.MenuId) })
                            @Html.ValidationMessageFor(model => model.MenuId)
                            <span class="help-block">

                            </span>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Ip, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.Ip, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Ip) })
                            @Html.ValidationMessageFor(model => model.Ip)
                            <span class="help-block">

                            </span>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.State, new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.State, Models.SysFieldModels.GetSysField("SysLog", "State"), "请选择", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.State)
                            <span class="help-block">

                            </span>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Message, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Message, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Message) })
                            @Html.ValidationMessageFor(model => model.Message)
                            <span class="help-block">

                            </span>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Remark, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Remark, new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Remark) })
                            @Html.ValidationMessageFor(model => model.Remark)
                            <span class="help-block">

                            </span>
                        </div>
                    </div>
                </div>

            </div>


        </div>
        <div class="form-actions">
            <div class="row">
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-offset-3 col-md-9">
                            <button type="submit" class="btn btn-primary">创建</button>
                            <button type="button" class="btn default" onclick="BackList('/SysLog')">返回</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                </div>
            </div>
        </div>
    </form>
    <!-- END FORM-->
</div>

<script type="text/javascript">

    $(function () {

    });



</script>



